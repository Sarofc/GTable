//THIS FILE IS GENERATED BY tabtool, DO NOT EDIT IT!
//GENERATE TIME [2020/4/20 3:15:49]

using System.Collections;
using System.Collections.Generic;
using System.Data;

namespace tabtool
{

    public class TbsachiveItem
    {
        public int id;
        public string name;
        public tbsIdCount test1;
        public List<int> test2;
        public List<tbsKeyValue> test3;
    }

    public class CfgachiveTable : TableManager<TbsachiveItem, CfgachiveTable>
    {
        public override bool Load()
        {
            TableReader tr = new TableReader();
            DataReader dr = new DataReader();
            DataTable dt = tr.ReadFile(MyConfig.WorkDir+"achive.txt");

            foreach(DataRow row in dt.Rows)
            {
                var data = new TbsachiveItem();
                  data.id = dr.GetInt(row["id"].ToString());
                  data.name = (row["name"].ToString());
                  data.test1 = dr.GetObject<tbsIdCount>(row["test1"].ToString());
                  data.test2 = dr.GetIntList(row["test2"].ToString());
                  data.test3 = dr.GetObjectList<tbsKeyValue>(row["test3"].ToString());
                  m_Datas[data.id] = data;
            }
            return true;
        }
    }


    public class Tbstest_aaItem
    {
        public int id;
        public string name;
        public tbsIdCount test1;
        public List<int> test2;
        public List<tbsKeyValue> test3;
    }

    public class Cfgtest_aaTable : TableManager<Tbstest_aaItem, Cfgtest_aaTable>
    {
        public override bool Load()
        {
            TableReader tr = new TableReader();
            DataReader dr = new DataReader();
            DataTable dt = tr.ReadFile(MyConfig.WorkDir+"test_aa.txt");

            foreach(DataRow row in dt.Rows)
            {
                var data = new Tbstest_aaItem();
                  data.id = dr.GetInt(row["id"].ToString());
                  data.name = (row["name"].ToString());
                  data.test1 = dr.GetObject<tbsIdCount>(row["test1"].ToString());
                  data.test2 = dr.GetIntList(row["test2"].ToString());
                  data.test3 = dr.GetObjectList<tbsKeyValue>(row["test3"].ToString());
                  m_Datas[data.id] = data;
            }
            return true;
        }
    }

    public class TableConfig : SingletonTable<TableConfig>
    {
        public bool LoadTableConfig()
        {
            if (!CfgachiveTable.Instance.Load()) return false;
            if (!Cfgtest_aaTable.Instance.Load()) return false;
            return true;
        }
    }
}
